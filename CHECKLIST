This file contains all things that are/should be working.
When you have been working on something, use this list to verify that you did not cause any regressions (things that worked before, but got broken).
Also, when you finish a new feature, add it to this list so that everyone knows about it, can play with it, and can test it.

Also testers and interested people can use this list to see what uzbl is about, and report problems if they find items listed here that do not work.

* commandline switches --uri "http://.." and --config behave as expected
* --help and -? should show help
* config loading: loading of settings, bindings and all behavior settings (including handlers) from config file
* fifo: type this in your shell after starting uzbl:
  echo 'uri http://www...' > <fifo path here>'
  where <fifo path> is printed on stdout during program startup.  Also "back" , "forward", "refresh" (basically all actions defined in `static Command commands` should behave as expected)
  On one of Dieter's pc's, using the fifo only works once.  Please report issues with the fifo if you find any.
* socket: uzblctrl -s <socketname> -c <command> (same commands as with fifo)
* history logging: the script as defined in sample config should write history entries (date,time, url) into the file defined in the script (by default ./extra/history.sh and /tmp/uzbl.history)
* invocations of external commands: you'll see it on stdout everytime uzbl calls an external script/program. the invocations should work and none of the arguments passed should be null/garbage/.. .
  all should be valid strings and contain things like the pid, fifo file, config file,.. (see README for details).
* XDG_CONFIG_HOME and XDG_CONFIG_DIRS (+ default values) fully supported and working (looks for a config file called 'uzbl/config').
* --uri can be specified without http:// -- if missing will be prepended.
* Downloading of files with handler script
* Open in new window. all (valid) args passed to your uzbl instance are passed also to the new instance, with the obvious exception of --uri.
* internal keybinds to change things work (as loaded by config)
* vimlike command and insert modes behave as expected
* always_insert_mode and modkey work too
* status bar can be toggled on and off, if off, some info (mode) will be put in title bar. position of statusbar (top/bottom) also works
* backspace erases last edit character. esc erases entire command buffer (if in comand mode)
* commands with parameters (keywords): any key sequence that ends with underscore _ expects parameter. Undersore marks exact location where parameter begins. Command part can have %s that will be replaced with parameter.
  This only works for internal commands. not when spawning external scripts.
        :o _ = uri %s - user needs to type :o www.google.com
        :O_ = uri %s - user needs to type :Owww.google.com
* when typing command, press insert (paste X cliboard) or shift insert (paste primary selection buffer)
* proxy, user agent and other network settings can be set in config
* scrolling works, with configurable keys (vi-like in sample config)
* searching:
  /_ = search %s <-- hilight all
  ; = search <-- jump over all hits
* run javascript on curent page through "script" command.
* variable replacement in user agent.
* cookies being handled by soup are being saved at cookie_text_file location
